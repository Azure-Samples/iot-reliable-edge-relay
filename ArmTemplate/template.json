{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "virtualMachines_edge_vm_name": {
            "defaultValue": "edge-vm",
            "type": "String"
        },
        "virtualMachines_edge_vm_username": {
            "defaultValue": "edgeuser",
            "type": "String"
        },
        "virtualMachines_edge_vm_password": {
            "defaultValue": "Edgeuser4ever",
            "type": "SecureString"
        },
        "networkInterfaces_edge_vm758_name": {
            "defaultValue": "edge-vm758",
            "type": "String"
        },
        "publicIPAddresses_edge_vm_ip_name": {
            "defaultValue": "edge-vm-ip",
            "type": "String"
        },
        "sites_reliable_edge_relay_function_name": {
            "defaultValue": "reliable-edge-relay-function",
            "type": "String"
        },
        "networkSecurityGroups_edge_vm_nsg_name": {
            "defaultValue": "edge-vm-nsg",
            "type": "String"
        },
        "serverfarms_ASP_reliableedgerelay_9228_name": {
            "defaultValue": "ASP-reliableedgerelay-9228",
            "type": "String"
        },
        "IotHubs_reliable_edge_relay_iot_hub_name": {
            "defaultValue": "reliable-edge-relay-iot-hub",
            "type": "String"
        },
        "namespaces_reliable_edge_relay_hub_name": {
            "defaultValue": "reliable-edge-relay-hub",
            "type": "String"
        },
        "streamingjobs_ingestion_job_name": {
            "defaultValue": "ingestion-job",
            "type": "String"
        },
        "storageAccounts_reliableedgerelaydiag_name": {
            "defaultValue": "reliableedgerelaydiag",
            "type": "String"
        },
        "virtualNetworks_reliable_edge_relay_vnet_name": {
            "defaultValue": "reliable-edge-relay-vnet",
            "type": "String"
        },
        "storageAccounts_reliableedgerelaystorage_name": {
            "defaultValue": "reliableedgerelaystorage",
            "type": "String"
        },
        "components_reliable_edge_relay_app_insights_name": {
            "defaultValue": "reliable-edge-relay-app-insights",
            "type": "String"
        },
        "workspaces_reliable_edge_relay_log_analytics_name": {
            "defaultValue": "reliable-edge-relay-log-analytics",
            "type": "String"
        },
        "smartdetectoralertrules_failure_anomalies___reliable_edge_relay_app_insights_name": {
            "defaultValue": "failure anomalies - reliable-edge-relay-app-insights",
            "type": "String"
        },
        "actionGroups_reliable_iot_edge_bindsi03_name": {
            "defaultValue": "reliable-edge-relay-actionGroup",
            "type": "String"
        },
        "adxClusterName": {
            "defaultValue": "reliable-edge-relay-adxCluster",
            "type": "string"
        },
        "adxDatabaseName": {
            "defaultValue": "reliable-edge-relay-adxDatabase",
            "type": "string"
        },
        "adxScriptName": {
            "defaultValue": "reliable-edge-relay-adxScript",
            "type": "string"
        },
        "adxTableName": {
            "defaultValue": "opcuaTelemetryTable",
            "type": "string"
        },
        "adxMappingName": {
            "defaultValue": "opcua_telemetry_mapping",
            "type": "string"
        },
        "adxDataFormat": {
            "type": "string",
            "defaultValue": "json",
            "metadata": {
                "description": "Specifies the data format"
            }
        },
        "adxDatabaseRouting": {
            "type": "string",
            "defaultValue": "Single",
            "metadata": {
                "description": "The database routing for the connection. If you set the value to **Single**, the data connection will be routed to a single database in the cluster as specified in the *databaseName* setting. If you set the value to **Multi**, you can override the default target database using the *Database* EventData property."
            }
        },
        "adxConsumerGroupName": {
            "defaultValue": "relayadxcg",
            "type": "string"
        },
        "adxDataConnectionName": {
            "type": "string",
            "defaultValue": "reliable-edge-relay-adxDataConnection"
        }
    },
    "variables": {
        "location": "[resourceGroup().location]",
        "subscriptionId": "[subscription().subscriptionId]",
        "resourceGroup": "[resourceGroup().name]",
        "dcs": ""
    },
    "resources": [
        {
            "type": "Microsoft.Devices/IotHubs",
            "apiVersion": "2018-04-01",
            "name": "[parameters('IotHubs_reliable_edge_relay_iot_hub_name')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "S1",
                "tier": "Standard",
                "capacity": 1
            },
            "properties": {
                "operationsMonitoringProperties": {
                    "events": {
                        "None": "None",
                        "Connections": "None",
                        "DeviceTelemetry": "None",
                        "C2DCommands": "None",
                        "DeviceIdentityOperations": "None",
                        "FileUploadOperations": "None",
                        "Routes": "None"
                    }
                },
                "ipFilterRules": [],
                "eventHubEndpoints": {
                    "events": {
                        "retentionTimeInDays": 1,
                        "partitionCount": 4,
                        "partitionIds": [
                            "0",
                            "1",
                            "2",
                            "3"
                        ],
                        "path": "reliable-edge-relay-iot-h",
                        "endpoint": "sb://iothub-ns-reliable-e-2409680-e5567765ac.servicebus.windows.net/"
                    },
                    "operationsMonitoringEvents": {
                        "retentionTimeInDays": 1,
                        "partitionCount": 4,
                        "partitionIds": [
                            "0",
                            "1",
                            "2",
                            "3"
                        ],
                        "path": "reliable-edge-relay-iot-h-operationmonitoring",
                        "endpoint": "sb://iothub-ns-reliable-e-2409680-e5567765ac.servicebus.windows.net/"
                    }
                },
                "routing": {
                    "endpoints": {
                        "serviceBusQueues": [],
                        "serviceBusTopics": [],
                        "eventHubs": [],
                        "storageContainers": []
                    },
                    "routes": [
                        {
                            "name": "messages",
                            "source": "DeviceMessages",
                            "condition": "true",
                            "endpointNames": [
                                "events"
                            ],
                            "isEnabled": true
                        }
                    ],
                    "fallbackRoute": {
                        "name": "$fallback",
                        "source": "DeviceMessages",
                        "condition": "true",
                        "endpointNames": [
                            "events"
                        ],
                        "isEnabled": true
                    }
                },
                "storageEndpoints": {
                    "$default": {
                        "sasTtlAsIso8601": "PT1H",
                        "connectionString": "",
                        "containerName": ""
                    }
                },
                "messagingEndpoints": {
                    "fileNotifications": {
                        "lockDurationAsIso8601": "PT1M",
                        "ttlAsIso8601": "PT1H",
                        "maxDeliveryCount": 10
                    }
                },
                "enableFileUploadNotifications": false,
                "cloudToDevice": {
                    "maxDeliveryCount": 10,
                    "defaultTtlAsIso8601": "PT1H",
                    "feedback": {
                        "lockDurationAsIso8601": "PT1M",
                        "ttlAsIso8601": "PT1H",
                        "maxDeliveryCount": 10
                    }
                },
                "features": "None"
            }
        },
        {
            "type": "Microsoft.Devices/IotHubs/EventHubEndpoints/ConsumerGroups",
            "apiVersion": "2022-04-30-preview",
            "name": "[concat(parameters('IotHubs_reliable_edge_relay_iot_hub_name'), '/events/', parameters('adxConsumerGroupName'))]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Devices/IotHubs', parameters('IotHubs_reliable_edge_relay_iot_hub_name'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Kusto/clusters",
            "apiVersion": "2021-01-01",
            "name": "[parameters('adxClusterName')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "Dev(No SLA)_Standard_E2a_v4",
                "tier": "Basic",
                "capacity": 1
            },
            "resources": [
                {
                    "name": "[parameters('adxDatabaseName')]",
                    "type": "databases",
                    "apiVersion": "2021-01-01",
                    "location": "[variables('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Kusto/clusters', parameters('adxClusterName'))]"
                    ],
                    "kind": "ReadWrite",
                    "properties": {
                        "softDeletePeriodInDays": 365,
                        "hotCachePeriodInDays": 31
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Kusto/Clusters/Databases/Scripts",
            "apiVersion": "2022-02-01",
            "name": "[concat(parameters('adxClusterName'), '/', parameters('adxDatabaseName'), '/', parameters('adxScriptName'))]",
            "dependsOn": [
                        "[resourceId('Microsoft.Kusto/clusters', parameters('adxClusterName'))]",
                        "[resourceId('Microsoft.Kusto/clusters/databases', parameters('adxClusterName'), parameters('adxDatabaseName'))]"
                    ],
            "properties": {
                "scriptContent": ".create table opcuaTelemetryTable ( timestamp:string, deviceID:string, nodeID:string, value:string)\n\n.create table opcuaTelemetryTable ingestion json mapping \"opcua_telemetry_mapping\"\n'['\n'{\"column\":\"timestamp\",\"path\":\"$[\\'timestamp\\']\",\"datatype\":\"\",\"transform\":null},{\"column\":\"deviceID\",\"path\":\"$[\\'deviceID\\']\",\"datatype\":\"\",\"transform\":null},{\"column\":\"nodeID\",\"path\":\"$[\\'nodeID\\']\",\"datatype\":\"\",\"transform\":null},{\"column\":\"value\",\"path\":\"$[\\'value\\']\",\"datatype\":\"\",\"transform\":null}'\n']'\n",
                "continueOnErrors": false,
                "forceUpdateTag": "[utcNow()]"
            }
        },
        {
            "type": "Microsoft.Kusto/Clusters/Databases/DataConnections",
            "apiVersion": "2019-09-07",
            "name": "[concat(parameters('adxClusterName'), '/', parameters('adxDatabaseName'), '/', parameters('adxDataConnectionName'))]",
            "location": "[variables('location')]",
            "kind": "IotHub",
            "dependsOn": [
                        "[resourceId('Microsoft.Kusto/clusters', parameters('adxClusterName'))]",
                        "[resourceId('Microsoft.Kusto/clusters/databases', parameters('adxClusterName'), parameters('adxDatabaseName'))]",
                        "[resourceId('Microsoft.Kusto/Clusters/Databases/Scripts', parameters('adxClusterName'), parameters('adxDatabaseName'), parameters('adxScriptName'))]"
                    ],
            "properties": {
                "iotHubResourceId": "[resourceId(variables('subscriptionId'), variables('resourceGroup'), 'Microsoft.Devices/IotHubs', parameters('IotHubs_reliable_edge_relay_iot_hub_name'))]",
                "consumerGroup": "[parameters('adxConsumerGroupName')]",
                "sharedAccessPolicyName": "iothubowner",
                "tableName": "[parameters('adxTableName')]",
                "mappingRuleName": "[parameters('adxMappingName')]",
                "dataFormat": "[parameters('adxDataFormat')]",
                "databaseRouting": "[parameters('adxDatabaseRouting')]"
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces",
            "apiVersion": "2018-01-01-preview",
            "name": "[parameters('namespaces_reliable_edge_relay_hub_name')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "Standard",
                "tier": "Standard",
                "capacity": 1
            },
            "properties": {
                "zoneRedundant": false,
                "isAutoInflateEnabled": true,
                "maximumThroughputUnits": 4,
                "kafkaEnabled": true
            }
        },
        {
            "type": "microsoft.insights/components",
            "apiVersion": "2020-02-02-preview",
            "name": "[parameters('components_reliable_edge_relay_app_insights_name')]",
            "location": "[variables('location')]",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                //"Flow_Type": "Redfield",
                "Request_Source": "IbizaWebAppExtensionCreate"
            },
            "resources": [
                {
                    "apiVersion": "2020-02-02-preview",
                    "name": "longdependencyduration",
                    "type": "ProactiveDetectionConfigs",
                    "location": "[variables('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Insights/components', parameters('components_reliable_edge_relay_app_insights_name'))]"
                    ],
                    "properties": {
                        "name": "longdependencyduration",
                        "sendEmailsToSubscriptionOwners": true,
                        "customEmails": [],
                        "enabled": false
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-09-01",
            "name": "[parameters('networkSecurityGroups_edge_vm_nsg_name')]",
            "location": "[variables('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 300,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-09-01",
            "name": "[parameters('publicIPAddresses_edge_vm_ip_name')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "ipAddress": "52.183.71.11",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-09-01",
            "name": "[parameters('virtualNetworks_reliable_edge_relay_vnet_name')]",
            "location": "[variables('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.1.0/24"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "10.0.1.0/24",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "microsoft.operationalinsights/workspaces",
            "apiVersion": "2015-11-01-preview",
            "name": "[parameters('workspaces_reliable_edge_relay_log_analytics_name')]",
            "location": "[variables('location')]",
            "properties": {
                "sku": {
                    "name": "pergb2018"
                },
                "retentionInDays": 30
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-04-01",
            "name": "[parameters('storageAccounts_reliableedgerelaydiag_name')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-04-01",
            "name": "[parameters('storageAccounts_reliableedgerelaystorage_name')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "type": "Microsoft.StreamAnalytics/streamingjobs",
            "apiVersion": "2016-03-01",
            "name": "[parameters('streamingjobs_ingestion_job_name')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Devices/IotHubs', parameters('IotHubs_reliable_edge_relay_iot_hub_name'))]",
                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', parameters('namespaces_reliable_edge_relay_hub_name'), 'detected-data-gaps')]",
                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', parameters('namespaces_reliable_edge_relay_hub_name'), 'ingress-metadata')]"  
            ],
            "properties": {
                "sku": {
                    "name": "Standard"
                },
                "outputStartMode": "JobStartTime",
                "eventsOutOfOrderPolicy": "Adjust",
                "outputErrorPolicy": "Stop",
                "eventsOutOfOrderMaxDelayInSeconds": 0,
                "eventsLateArrivalMaxDelayInSeconds": 5,
                "dataLocale": "en-US",
                "compatibilityLevel": "1.1",
                "inputs": [
                    {
                        "name": "iot-hub",
                        "properties": {
                            "type": "Stream",
                            "datasource": {
                                "type": "Microsoft.Devices/IotHubs",
                                "properties": {
                                    "iotHubNamespace": "[parameters('IotHubs_reliable_edge_relay_iot_hub_name')]",
                                    "sharedAccessPolicyName": "iothubowner",
                                    "sharedAccessPolicyKey": "[listKeys(resourceId('Microsoft.Devices/IotHubs/IotHubKeys', parameters('IotHubs_reliable_edge_relay_iot_hub_name'), 'iothubowner'),'2018-04-01').primaryKey]",
                                    "endpoint": "messages/events",
                                    "consumerGroupName": "$Default"
                                }
                            },
                            "compression": {
                                "type": "None"
                            },
                            "serialization": {
                                "type": "Json",
                                "properties": {
                                    "encoding": "UTF8"
                                }
                            },
                            "etag": "911e4f52-94b7-41bb-9dd7-585866645259"
                        }
                    }
                ],
                "outputs": [
                    {
                        "name": "detected-data-gaps",
                        "properties": {
                            "datasource": {
                                "type": "Microsoft.ServiceBus/EventHub",
                                "properties": {
                                    "partitionKey": "BatchId",
                                    "eventHubName": "detected-data-gaps",
                                    "serviceBusNamespace": "[parameters('namespaces_reliable_edge_relay_hub_name')]",
                                    "sharedAccessPolicyName": "StreamAnalyticsAccessKey",
                                    "sharedAccessPolicyKey": "[listKeys(resourceId('Microsoft.EventHub/namespaces/authorizationRules', parameters('namespaces_reliable_edge_relay_hub_name'), 'StreamAnalyticsAccessKey'),'2017-04-01').primaryKey]"
                                }
                            },
                            "serialization": {
                                "type": "Json",
                                "properties": {
                                    "encoding": "UTF8",
                                    "format": "LineSeparated"
                                }
                            }
                        }
                    },
                    {
                        "name": "ingress-metadata",
                        "properties": {
                            "datasource": {
                                "type": "Microsoft.ServiceBus/EventHub",
                                "properties": {
                                    "partitionKey": "BatchId",
                                    "eventHubName": "ingress-metadata",
                                    "serviceBusNamespace": "[parameters('namespaces_reliable_edge_relay_hub_name')]",
                                    "sharedAccessPolicyName": "StreamAnalyticsAccessKey",
                                    "sharedAccessPolicyKey": "[listKeys(resourceId('Microsoft.EventHub/namespaces/authorizationRules', parameters('namespaces_reliable_edge_relay_hub_name'), 'StreamAnalyticsAccessKey'),'2017-04-01').primaryKey]"
                                }
                            },
                            "serialization": {
                                "type": "Json",
                                "properties": {
                                    "encoding": "UTF8",
                                    "format": "LineSeparated"
                                }
                            }
                        }
                    }
                ],
                "transformation": {
                    "name": "processing-query",
                    "properties": {
                        "query": "with\r\ndetection\r\nas\r\n(\r\n    select\r\n    PartitionId,\r\n    GetMetadataPropertyValue([iot-hub], '[User].[deviceID]') as deviceID,\r\n    GetMetadataPropertyValue([iot-hub], '[User].[batchId]') as batchID,\r\n    GetMetadataPropertyValue([iot-hub], '[User].[EndWindow]') as currEndWindow,\r\n    LAG(GetMetadataPropertyValue([iot-hub], '[User].[EndWindow]')) over (PARTITION BY PartitionId LIMIT DURATION(hour, 48)) as previousEndWindow,\r\n    GetMetadataPropertyValue([iot-hub], '[User].[StartWindow]') as currStartWindow,\r\n    GetMetadataPropertyValue([iot-hub], '[User].[firstTsInBatch]') as currfirstTsInBatch,\r\n    LAG(GetMetadataPropertyValue([iot-hub], '[User].[lastTsInBatch]')) over (PARTITION BY PartitionId LIMIT DURATION(hour, 48)) as previousLastTsInBatch\r\n    from [iot-hub] partition by PartitionId\r\n),\r\ndataWindows as\r\n(\r\n    select\r\n    *,\r\n    PartitionId,\r\n    GetMetadataPropertyValue([iot-hub], '[User].[StartWindow]') as currStartWindow,\r\n    GetMetadataPropertyValue([iot-hub], '[User].[EndWindow]') as currEndWindow,\r\n    LAG(GetMetadataPropertyValue([iot-hub], '[User].[EndWindow]')) over (PARTITION BY PartitionId LIMIT DURATION(hour, 48)) as previousEndWindow,\r\n    GetMetadataPropertyValue([iot-hub], '[User].[firstTsInBatch]') as currfirstTsInBatch,\r\n  LAG(GetMetadataPropertyValue([iot-hub], '[User].[lastTsInBatch]')) over (PARTITION BY PartitionId LIMIT DURATION(hour, 48)) as previousLastTsInBatch\r\n    from [iot-hub] partition by PartitionId\r\n)\r\nselect detection.deviceID, detection.currfirstTsInBatch, detection.previousLastTsInBatch,detection.currStartWindow, detection.previousEndWindow\r\ninto [detected-data-gaps]\r\nfrom detection\r\nWHERE detection.previousEndWindow <> detection.currEndWindow AND CAST(detection.currStartWindow as bigint) > CAST(detection.previousEndWindow as bigint)\r\nselect *\r\ninto [ingress-metadata]\r\nfrom dataWindows\r\nWHERE CAST(dataWindows.currStartWindow as bigint) = CAST(dataWindows.previousEndWindow as bigint)\r\nOR CAST(dataWindows.currEndWindow as bigint) = CAST(dataWindows.previousEndWindow as bigint)\r\n",
                        "streamingUnits": 1
                    }
                }
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2016-09-01",
            "name": "[parameters('serverfarms_ASP_reliableedgerelay_9228_name')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "Y1",
                "tier": "Dynamic",
                "size": "Y1",
                "family": "Y",
                "capacity": 0
            },
            "kind": "functionapp",
            "properties": {
                "name": "[parameters('serverfarms_ASP_reliableedgerelay_9228_name')]",
                "perSiteScaling": false,
                "reserved": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0
            }
        },
        {
            "type": "microsoft.alertsmanagement/smartdetectoralertrules",
            "apiVersion": "2019-06-01",
            "name": "[parameters('smartdetectoralertrules_failure_anomalies___reliable_edge_relay_app_insights_name')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_reliable_edge_relay_app_insights_name'))]",
                "[resourceId('microsoft.insights/actionGroups', parameters('actionGroups_reliable_iot_edge_bindsi03_name'))]"
            ],
            "properties": {
                "description": "Failure Anomalies notifies you of an unusual rise in the rate of failed HTTP requests or dependency calls.",
                "state": "Enabled",
                "severity": "Sev3",
                "frequency": "PT1M",
                "detector": {
                    "id": "FailureAnomaliesDetector"
                },
                "scope": [
                    "[resourceId('microsoft.insights/components', parameters('components_reliable_edge_relay_app_insights_name'))]"
                ],
                "actionGroups": {
                    "groupIds": [
                        "[subscriptionResourceId('microsoft.insights/actionGroups', parameters('actionGroups_reliable_iot_edge_bindsi03_name'))]"
                    ]
                }
            }
        },
        {
            "type": "microsoft.insights/actionGroups",
            "apiVersion": "2022-06-01",
            "name": "[parameters('actionGroups_reliable_iot_edge_bindsi03_name')]",
            "location": "Global",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_reliable_edge_relay_app_insights_name'))]"
            ],
            "properties": {
                "groupShortName": "reliableEdge",
                "enabled": true,
                "emailReceivers": [],
                "smsReceivers": [],
                "webhookReceivers": [],
                "eventHubReceivers": [],
                "itsmReceivers": [],
                "azureAppPushReceivers": [],
                "automationRunbookReceivers": [],
                "voiceReceivers": [],
                "logicAppReceivers": [],
                "azureFunctionReceivers": [],
                "armRoleReceivers": []
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/AuthorizationRules",
            "apiVersion": "2017-04-01",
            "name": "[concat(parameters('namespaces_reliable_edge_relay_hub_name'), '/RootManageSharedAccessKey')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', parameters('namespaces_reliable_edge_relay_hub_name'))]"
            ],
            "properties": {
                "rights": [
                    "Listen",
                    "Manage",
                    "Send"
                ]
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/AuthorizationRules",
            "apiVersion": "2017-04-01",
            "name": "[concat(parameters('namespaces_reliable_edge_relay_hub_name'), '/StreamAnalyticsAccessKey')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', parameters('namespaces_reliable_edge_relay_hub_name'))]"
            ],
            "properties": {
                "rights": [
                    "Listen",
                    "Send"
                ]
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs",
            "apiVersion": "2017-04-01",
            "name": "[concat(parameters('namespaces_reliable_edge_relay_hub_name'), '/detected-data-gaps')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', parameters('namespaces_reliable_edge_relay_hub_name'))]"
            ],
            "properties": {
                "messageRetentionInDays": 1,
                "partitionCount": 1,
                "status": "Active"
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs",
            "apiVersion": "2017-04-01",
            "name": "[concat(parameters('namespaces_reliable_edge_relay_hub_name'), '/ingress-metadata')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', parameters('namespaces_reliable_edge_relay_hub_name'))]"
            ],
            "properties": {
                "messageRetentionInDays": 1,
                "partitionCount": 1,
                "status": "Active"
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/networkRuleSets",
            "apiVersion": "2018-01-01-preview",
            "name": "[concat(parameters('namespaces_reliable_edge_relay_hub_name'), '/default')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', parameters('namespaces_reliable_edge_relay_hub_name'))]"
            ],
            "properties": {
                "defaultAction": "Deny",
                "virtualNetworkRules": [],
                "ipRules": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('networkSecurityGroups_edge_vm_nsg_name'), '/SSH')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_edge_vm_nsg_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 300,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('virtualNetworks_reliable_edge_relay_vnet_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_reliable_edge_relay_vnet_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.1.0/24",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2021-09-01",
            "name": "[concat(parameters('storageAccounts_reliableedgerelaydiag_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_reliableedgerelaydiag_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2021-09-01",
            "name": "[concat(parameters('storageAccounts_reliableedgerelaystorage_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_reliableedgerelaystorage_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2022-03-01",
            "name": "[parameters('sites_reliable_edge_relay_function_name')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ASP_reliableedgerelay_9228_name'))]"
            ],
            "kind": "functionapp",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_reliable_edge_relay_function_name'), '.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_reliable_edge_relay_function_name'), '.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ASP_reliableedgerelay_9228_name'))]",
				"siteConfig": {
                    "appSettings": [
                    {
                        "name": "FUNCTIONS_EXTENSION_VERSION",
                        "value": "~4"
                    }
                    ]
                },
                "reserved": false,
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 1536,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": false
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2016-08-01",
            "name": "[concat(parameters('sites_reliable_edge_relay_function_name'), '/web')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_reliable_edge_relay_function_name'))]"
            ],
            "properties": {
		    "FUNCTIONS_EXTENSION_VERSION": "~4",
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php"
                ],
                "netFrameworkVersion": "v4.0",
                "phpVersion": "5.6",
                "pythonVersion": "",
                "nodeVersion": "",
                "linuxFxVersion": "",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$reliable-edge-relay-function",
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "appCommandLine": "",
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false,
                        "virtualDirectories": null
                    }
                ],
                "winAuthAdminState": 0,
                "winAuthTenantState": 0,
                "customAppPoolIdentityAdminState": false,
                "customAppPoolIdentityTenantState": false,
                "loadBalancing": "LeastRequests",
                "routingRules": [],
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "vnetName": "",
                "siteAuthEnabled": false,
                "siteAuthSettings": {
                    "enabled": null,
                    "unauthenticatedClientAction": null,
                    "tokenStoreEnabled": null,
                    "allowedExternalRedirectUrls": null,
                    "defaultProvider": null,
                    "clientId": null,
                    "clientSecret": null,
                    "clientSecretCertificateThumbprint": null,
                    "issuer": null,
                    "allowedAudiences": null,
                    "additionalLoginParams": null,
                    "isAadAutoProvisioned": false,
                    "googleClientId": null,
                    "googleClientSecret": null,
                    "googleOAuthScopes": null,
                    "facebookAppId": null,
                    "facebookAppSecret": null,
                    "facebookOAuthScopes": null,
                    "twitterConsumerKey": null,
                    "twitterConsumerSecret": null,
                    "microsoftAccountClientId": null,
                    "microsoftAccountClientSecret": null,
                    "microsoftAccountOAuthScopes": null
                },
                "cors": {
                    "allowedOrigins": [
                        "https://functions.azure.com",
                        "https://functions-staging.azure.com",
                        "https://functions-next.azure.com"
                    ],
                    "supportCredentials": false
                },
                "localMySqlEnabled": false,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "ftpsState": "AllAllowed",
                "reservedInstanceCount": 0,
                "fileChangeAuditEnabled": false,
                "functionsRuntimeScaleMonitoringEnabled": false
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2016-08-01",
            "name": "[concat(parameters('sites_reliable_edge_relay_function_name'), '/', parameters('sites_reliable_edge_relay_function_name'), '.azurewebsites.net')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_reliable_edge_relay_function_name'))]"
            ],
            "properties": {
                "siteName": "[parameters('sites_reliable_edge_relay_function_name')]",
                "hostNameType": "Verified"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-03-01",
            "name": "[parameters('virtualMachines_edge_vm_name')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_edge_vm758_name'))]",
                "[resourceId('Microsoft.Storage/StorageAccounts', parameters('storageAccounts_reliableedgerelaydiag_name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_DC1ds_v3"//Standard_DC1ds_v3
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "0001-com-ubuntu-server-focal",
                        "sku": "20_04-lts-gen2",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "[concat(parameters('virtualMachines_edge_vm_name'), '_OsDisk_1_0f6fe876f3274353b96a082837ea1ec3')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        },
                        "diskSizeGB": 30
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_edge_vm_name')]",
                    "adminUsername": "[parameters('virtualMachines_edge_vm_username')]",
                    "adminPassword": "[parameters('virtualMachines_edge_vm_password')]",
                    "customData": "[base64(concat('#cloud-config\n\napt:\n  preserve_sources_list: true\n  sources:\n    msft.list:\n      source: \"deb https://packages.microsoft.com/ubuntu/20.04/prod focal main\"\n      key: |\n        -----BEGIN PGP PUBLIC KEY BLOCK-----\n        Version: GnuPG v1.4.7 (GNU/Linux)\n\n        mQENBFYxWIwBCADAKoZhZlJxGNGWzqV+1OG1xiQeoowKhssGAKvd+buXCGISZJwT\n        LXZqIcIiLP7pqdcZWtE9bSc7yBY2MalDp9Liu0KekywQ6VVX1T72NPf5Ev6x6DLV\n        7aVWsCzUAF+eb7DC9fPuFLEdxmOEYoPjzrQ7cCnSV4JQxAqhU4T6OjbvRazGl3ag\n        OeizPXmRljMtUUttHQZnRhtlzkmwIrUivbfFPD+fEoHJ1+uIdfOzZX8/oKHKLe2j\n        H632kvsNzJFlROVvGLYAk2WRcLu+RjjggixhwiB+Mu/A8Tf4V6b+YppS44q8EvVr\n        M+QvY7LNSOffSO6Slsy9oisGTdfE39nC7pVRABEBAAG0N01pY3Jvc29mdCAoUmVs\n        ZWFzZSBzaWduaW5nKSA8Z3Bnc2VjdXJpdHlAbWljcm9zb2Z0LmNvbT6JATUEEwEC\n        AB8FAlYxWIwCGwMGCwkIBwMCBBUCCAMDFgIBAh4BAheAAAoJEOs+lK2+EinPGpsH\n        /32vKy29Hg51H9dfFJMx0/a/F+5vKeCeVqimvyTM04C+XENNuSbYZ3eRPHGHFLqe\n        MNGxsfb7C7ZxEeW7J/vSzRgHxm7ZvESisUYRFq2sgkJ+HFERNrqfci45bdhmrUsy\n        7SWw9ybxdFOkuQoyKD3tBmiGfONQMlBaOMWdAsic965rvJsd5zYaZZFI1UwTkFXV\n        KJt3bp3Ngn1vEYXwijGTa+FXz6GLHueJwF0I7ug34DgUkAFvAs8Hacr2DRYxL5RJ\n        XdNgj4Jd2/g6T9InmWT0hASljur+dJnzNiNCkbn9KbX7J/qK1IbR8y560yRmFsU+\n        NdCFTW7wY0Fb1fWJ+/KTsC4=\n        =J6gs\n        -----END PGP PUBLIC KEY BLOCK----- \npackages:\n  - moby-cli\n  - moby-engine\nruncmd:\n  - dcs=\"',variables('dcs'),'\"\n  - |\n      set -x\n      (\n\n        # Wait for docker daemon to start\n        while [ $(ps -ef | grep -v grep | grep docker | wc -l) -le 0 ]; do \n          sleep 3\n        done\n\n        sudo apt-get install aziot-edge\n\n        if [ ! -z $dcs ]; then\n          mkdir /etc/aziot\n          wget https://raw.githubusercontent.com/Azure/iotedge-vm-deploy/master/config.toml -O /etc/aziot/config.toml\n          sed -i \"s#\\(connection_string = \\).*#\\1\\\"$dcs\\\"#g\" /etc/aziot/config.toml\n          iotedge config apply -c /etc/aziot/config.toml\n        fi\n\n      ) &\n'))]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": false,
                        "provisionVMAgent": true
                    },
                    "secrets": [],
                    "allowExtensionOperations": true
                },
                "securityProfile": {
                    "uefiSettings": {
                        "secureBootEnabled": true,
                        "vTpmEnabled": true
                    },
                    "securityType": "TrustedLaunch"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_edge_vm758_name'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https://', parameters('storageAccounts_reliableedgerelaydiag_name'), '.blob.core.windows.net/')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs/consumergroups",
            "apiVersion": "2017-04-01",
            "name": "[concat(parameters('namespaces_reliable_edge_relay_hub_name'), '/detected-data-gaps/$Default')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', parameters('namespaces_reliable_edge_relay_hub_name'), 'detected-data-gaps')]",
                "[resourceId('Microsoft.EventHub/namespaces', parameters('namespaces_reliable_edge_relay_hub_name'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs/consumergroups",
            "apiVersion": "2017-04-01",
            "name": "[concat(parameters('namespaces_reliable_edge_relay_hub_name'), '/ingress-metadata/$Default')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', parameters('namespaces_reliable_edge_relay_hub_name'), 'ingress-metadata')]",
                "[resourceId('Microsoft.EventHub/namespaces', parameters('namespaces_reliable_edge_relay_hub_name'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2021-09-01",
            "name": "[concat(parameters('storageAccounts_reliableedgerelaystorage_name'), '/default/vulnerability-assessments')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_reliableedgerelaystorage_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_reliableedgerelaystorage_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2021-09-01",
            "name": "[concat(parameters('storageAccounts_reliableedgerelaystorage_name'), '/default/azure-webjobs-eventhub')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_reliableedgerelaystorage_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_reliableedgerelaystorage_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2021-09-01",
            "name": "[concat(parameters('storageAccounts_reliableedgerelaystorage_name'), '/default/azure-webjobs-hosts')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_reliableedgerelaystorage_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_reliableedgerelaystorage_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2021-09-01",
            "name": "[concat(parameters('storageAccounts_reliableedgerelaystorage_name'), '/default/azure-webjobs-secrets')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_reliableedgerelaystorage_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_reliableedgerelaystorage_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2021-09-01",
            "name": "[concat(parameters('storageAccounts_reliableedgerelaydiag_name'), '/default/bootdiagnostics-edgevm-310a81f3-7687-4952-a4a7-24cec9f63bf7')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_reliableedgerelaydiag_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_reliableedgerelaydiag_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2021-09-01",
            "name": "[concat(parameters('storageAccounts_reliableedgerelaystorage_name'), '/default/edge-vm')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_reliableedgerelaystorage_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_reliableedgerelaystorage_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-09-01",
            "name": "[parameters('networkInterfaces_edge_vm758_name')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_edge_vm_ip_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_reliable_edge_relay_vnet_name'), 'default')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_edge_vm_nsg_name'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "10.0.1.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_edge_vm_ip_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_reliable_edge_relay_vnet_name'), 'default')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_edge_vm_nsg_name'))]"
                }
            }
        }
    ]
}
